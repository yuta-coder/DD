import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv("datasets/Boston.csv")

df.head()

# Step 2: Explore and clean the data
print("Dataset Info:\n", df.info())
print("\nMissing Values:\n", df.isnull().sum())
print("\nSummary Statistics:\n", df.describe())

x = df.drop('medv', axis=1)
y = df['medv']

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.3, random_state = 42)'

lr = LinearRegression()
lr.fit(x_train, y_train)
y_pred = lr.predict(x_test)
y_pred_train = lr.predict(x_train)
print(y_pred[:5])
print(y_pred_train[:5])


mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"\nMean Squared Error: ", mse)
print(f"RÂ² Score: ", r2)

print("Training accuracy is:")
print(lr.score(x_train, y_train))

print("Testing accuracy is:")
print(lr.score(x_test, y_test))


plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, edgecolors=(0, 0, 0))
plt.scatter(y_train, y_pred_train, edgecolors=(0, 0, 0))
plt.xlabel("Actual MEDV")
plt.ylabel("Predicted MEDV")
plt.title("Actual vs Predicted House Prices")
plt.show()
